# pqmagic_kem.pyx

from pqmagic_wrapper import *

cdef enum algo_label:
   ML_KEM_512
   ML_KEM_768
   ML_KEM_1024
   KYBER_512
   KYBER_768
   KYBER_1024
   AIGIS_ENC_1
   AIGIS_ENC_2
   AIGIS_ENC_3
   AIGIS_ENC_4


cdef class KEM:
   cdef algo_label label
   cdef unsigned char *pk
   cdef unsigned char *sk

   def __cinit__(self, unsigned char *name):
      try:
         self.label = algo_label(name)
      except ValueError:
         raise ValueError("Invalid algorithm name.")
      
      return keypair(self.pk, self.sk)
      
   def pqmagic_status keypair(self, unsigned char *pk, unsigned char *sk):
      if(self.label == ML_KEM_512):
         return pqmagic_ml_kem_512_std_keypair(pk, sk)
      elif(self.label == ML_KEM_768):
         return pqmagic_ml_kem_768_std_keypair(pk, sk)
      elif(self.label == ML_KEM_1024):
         return pqmagic_ml_kem_1024_std_keypair(pk, sk)
      elif(self.label == KYBER_512):
         return pqmagic_kyber_512_std_keypair(pk, sk)
      elif(self.label == KYBER_768):
         return pqmagic_kyber_768_std_keypair(pk, sk)
      elif(self.label == KYBER_1024):
         return pqmagic_kyber_1024_std_keypair(pk, sk)
      elif(self.label == AIGIS_ENC_1):
         return pqmagic_aigis_enc_1_std_keypair(pk, sk)
      elif(self.label == AIGIS_ENC_2):
         return pqmagic_aigis_enc_2_std_keypair(pk, sk)
      elif(self.label == AIGIS_ENC_3):
         return pqmagic_aigis_enc_3_std_keypair(pk, sk)
      elif(self.label == AIGIS_ENC_4):
         return pqmagic_aigis_enc_4_std_keypair(pk, sk)
      else:
         return PQMAGIC_FAILURE

   def pqmagic_status encaps(self, unsigned char *ct, unsigned char *ss):
      if(self.label == ML_KEM_512):
         return pqmagic_ml_kem_512_std_enc(ct, ss, self.pk)
      elif(self.label == ML_KEM_768):
         return pqmagic_ml_kem_768_std_enc(ct, ss, self.pk)
      elif(self.label == ML_KEM_1024):
         return pqmagic_ml_kem_1024_std_enc(ct, ss, self.pk)
      elif(self.label == KYBER_512):
         return pqmagic_kyber_512_std_enc(ct, ss, self.pk)
      elif(self.label == KYBER_768):
         return pqmagic_kyber_768_std_enc(ct, ss, self.pk)
      elif(self.label == KYBER_1024):
         return pqmagic_kyber_1024_std_enc(ct, ss, self.pk)
      elif(self.label == AIGIS_ENC_1):
         return pqmagic_aigis_enc_1_std_enc(ct, ss, self.pk)
      elif(self.label == AIGIS_ENC_2):
         return pqmagic_aigis_enc_2_std_enc(ct, ss, self.pk)
      elif(self.label == AIGIS_ENC_3):
         return pqmagic_aigis_enc_3_std_enc(ct, ss, self.pk)
      elif(self.label == AIGIS_ENC_4):
         return pqmagic_aigis_enc_4_std_enc(ct, ss, self.pk)
      else:
         return PQMAGIC_FAILURE

   def pqmagic_status decaps(self, unsigned char *ss, unsigned char *ct):
      if(label == ML_KEM_512):
         return pqmagic_ml_kem_512_std_dec(ss, ct, self.sk)
      elif(label == ML_KEM_768):
         return pqmagic_ml_kem_768_std_dec(ss, ct, self.sk)
      elif(label == ML_KEM_1024):
         return pqmagic_ml_kem_1024_std_dec(ss, ct, self.sk)
      elif(label == KYBER_512):
         return pqmagic_kyber_512_std_dec(ss, ct, self.sk)
      elif(label == KYBER_768):
         return pqmagic_kyber_768_std_dec(ss, ct, self.sk)
      elif(label == KYBER_1024):
         return pqmagic_kyber_1024_std_dec(ss, ct, self.sk)
      elif(label == AIGIS_ENC_1):
         return pqmagic_aigis_enc_1_std_dec(ss, ct, self.sk)
      elif(label == AIGIS_ENC_2):
         return pqmagic_aigis_enc_2_std_dec(ss, ct, self.sk)
      elif(label == AIGIS_ENC_3):
         return pqmagic_aigis_enc_3_std_dec(ss, ct, self.sk)
      elif(label == AIGIS_ENC_4):
         return pqmagic_aigis_enc_4_std_dec(ss, ct, self.sk)
      else:
         return PQMAGIC_FAILURE

   def __dealloc__(self):
      if self.pk:
         free(self.pk)
      if self.sk:
         free(self.sk)
      